package col;

public class Color {

static int[][] CMAP=new int[3][256];
static int[][] MAP=new int[3][256];
public static void main(String args[])
{

	
	BuildColorMap();
for(int i=0;i<3;i++)
	for(int j=0;j<256;j++)
	{
	//	MAP[i][j]=0;
		//MAP[i][j]=MAP[i][j]|CMAP[i][j];
		//if(CMAP[i][j]<0)
		//	CMAP[i][j]&=0xff;
		System.out.println(" "+i+"  "+j+" "+CMAP[i][j]);
	}
}
/*
 *  0  0 0
 0  1 0
 0  2 0
 0  3 0
 0  4 0
 0  5 0
 0  6 0
 0  7 0
 0  8 0
 0  9 0
 0  10 0
 0  11 0
 0  12 0
 0  13 0
 0  14 0
 0  15 0
 0  16 0
 0  17 0
 0  18 0
 0  19 0
 0  20 0
 0  21 0
 0  22 0
 0  23 0
 0  24 0
 0  25 0
 0  26 0
 0  27 0
 0  28 0
 0  29 0
 0  30 0
 0  31 0
 0  32 0
 0  33 0
 0  34 0
 0  35 0
 0  36 0
 0  37 0
 0  38 0
 0  39 0
 0  40 0
 0  41 0
 0  42 0
 0  43 0
 0  44 0
 0  45 0
 0  46 0
 0  47 0
 0  48 0
 0  49 0
 0  50 0
 0  51 0
 0  52 0
 0  53 0
 0  54 0
 0  55 0
 0  56 0
 0  57 0
 0  58 0
 0  59 0
 0  60 0
 0  61 0
 0  62 0
 0  63 0
 0  64 0
 0  65 0
 0  66 0
 0  67 0
 0  68 0
 0  69 0
 0  70 0
 0  71 0
 0  72 0
 0  73 0
 0  74 0
 0  75 0
 0  76 0
 0  77 0
 0  78 0
 0  79 0
 0  80 0
 0  81 0
 0  82 0
 0  83 0
 0  84 0
 0  85 0
 0  86 0
 0  87 0
 0  88 0
 0  89 0
 0  90 0
 0  91 0
 0  92 0
 0  93 0
 0  94 0
 0  95 0
 0  96 3
 0  97 7
 0  98 11
 0  99 15
 0  100 19
 0  101 23
 0  102 27
 0  103 31
 0  104 35
 0  105 39
 0  106 43
 0  107 47
 0  108 51
 0  109 55
 0  110 59
 0  111 63
 0  112 67
 0  113 71
 0  114 75
 0  115 79
 0  116 83
 0  117 87
 0  118 91
 0  119 95
 0  120 99
 0  121 103
 0  122 107
 0  123 111
 0  124 115
 0  125 119
 0  126 123
 0  127 127
 0  128 131
 0  129 135
 0  130 139
 0  131 143
 0  132 147
 0  133 151
 0  134 155
 0  135 159
 0  136 163
 0  137 167
 0  138 171
 0  139 175
 0  140 179
 0  141 183
 0  142 187
 0  143 191
 0  144 195
 0  145 199
 0  146 203
 0  147 207
 0  148 211
 0  149 215
 0  150 219
 0  151 223
 0  152 227
 0  153 231
 0  154 235
 0  155 239
 0  156 243
 0  157 247
 0  158 251
 0  159 255
 0  160 255
 0  161 255
 0  162 255
 0  163 255
 0  164 255
 0  165 255
 0  166 255
 0  167 255
 0  168 255
 0  169 255
 0  170 255
 0  171 255
 0  172 255
 0  173 255
 0  174 255
 0  175 255
 0  176 255
 0  177 255
 0  178 255
 0  179 255
 0  180 255
 0  181 255
 0  182 255
 0  183 255
 0  184 255
 0  185 255
 0  186 255
 0  187 255
 0  188 255
 0  189 255
 0  190 255
 0  191 255
 0  192 255
 0  193 255
 0  194 255
 0  195 255
 0  196 255
 0  197 255
 0  198 255
 0  199 255
 0  200 255
 0  201 255
 0  202 255
 0  203 255
 0  204 255
 0  205 255
 0  206 255
 0  207 255
 0  208 255
 0  209 255
 0  210 255
 0  211 255
 0  212 255
 0  213 255
 0  214 255
 0  215 255
 0  216 255
 0  217 255
 0  218 255
 0  219 255
 0  220 255
 0  221 255
 0  222 255
 0  223 255
 0  224 382
 0  225 378
 0  226 374
 0  227 370
 0  228 366
 0  229 362
 0  230 358
 0  231 354
 0  232 350
 0  233 346
 0  234 342
 0  235 338
 0  236 334
 0  237 330
 0  238 326
 0  239 322
 0  240 318
 0  241 314
 0  242 310
 0  243 306
 0  244 302
 0  245 298
 0  246 294
 0  247 290
 0  248 286
 0  249 282
 0  250 278
 0  251 274
 0  252 270
 0  253 266
 0  254 262
 0  255 258
 1  0 0
 1  1 0
 1  2 0
 1  3 0
 1  4 0
 1  5 0
 1  6 0
 1  7 0
 1  8 0
 1  9 0
 1  10 0
 1  11 0
 1  12 0
 1  13 0
 1  14 0
 1  15 0
 1  16 0
 1  17 0
 1  18 0
 1  19 0
 1  20 0
 1  21 0
 1  22 0
 1  23 0
 1  24 0
 1  25 0
 1  26 0
 1  27 0
 1  28 0
 1  29 0
 1  30 0
 1  31 0
 1  32 3
 1  33 7
 1  34 11
 1  35 15
 1  36 19
 1  37 23
 1  38 27
 1  39 31
 1  40 35
 1  41 39
 1  42 43
 1  43 47
 1  44 51
 1  45 55
 1  46 59
 1  47 63
 1  48 67
 1  49 71
 1  50 75
 1  51 79
 1  52 83
 1  53 87
 1  54 91
 1  55 95
 1  56 99
 1  57 103
 1  58 107
 1  59 111
 1  60 115
 1  61 119
 1  62 123
 1  63 127
 1  64 131
 1  65 135
 1  66 139
 1  67 143
 1  68 147
 1  69 151
 1  70 155
 1  71 159
 1  72 163
 1  73 167
 1  74 171
 1  75 175
 1  76 179
 1  77 183
 1  78 187
 1  79 191
 1  80 195
 1  81 199
 1  82 203
 1  83 207
 1  84 211
 1  85 215
 1  86 219
 1  87 223
 1  88 227
 1  89 231
 1  90 235
 1  91 239
 1  92 243
 1  93 247
 1  94 251
 1  95 255
 1  96 255
 1  97 255
 1  98 255
 1  99 255
 1  100 255
 1  101 255
 1  102 255
 1  103 255
 1  104 255
 1  105 255
 1  106 255
 1  107 255
 1  108 255
 1  109 255
 1  110 255
 1  111 255
 1  112 255
 1  113 255
 1  114 255
 1  115 255
 1  116 255
 1  117 255
 1  118 255
 1  119 255
 1  120 255
 1  121 255
 1  122 255
 1  123 255
 1  124 255
 1  125 255
 1  126 255
 1  127 255
 1  128 255
 1  129 255
 1  130 255
 1  131 255
 1  132 255
 1  133 255
 1  134 255
 1  135 255
 1  136 255
 1  137 255
 1  138 255
 1  139 255
 1  140 255
 1  141 255
 1  142 255
 1  143 255
 1  144 255
 1  145 255
 1  146 255
 1  147 255
 1  148 255
 1  149 255
 1  150 255
 1  151 255
 1  152 255
 1  153 255
 1  154 255
 1  155 255
 1  156 255
 1  157 255
 1  158 255
 1  159 255
 1  160 255
 1  161 251
 1  162 247
 1  163 243
 1  164 239
 1  165 235
 1  166 231
 1  167 227
 1  168 223
 1  169 219
 1  170 215
 1  171 211
 1  172 207
 1  173 203
 1  174 199
 1  175 195
 1  176 191
 1  177 187
 1  178 183
 1  179 179
 1  180 175
 1  181 171
 1  182 167
 1  183 163
 1  184 159
 1  185 155
 1  186 151
 1  187 147
 1  188 143
 1  189 139
 1  190 135
 1  191 131
 1  192 127
 1  193 123
 1  194 119
 1  195 115
 1  196 111
 1  197 107
 1  198 103
 1  199 99
 1  200 95
 1  201 91
 1  202 87
 1  203 83
 1  204 79
 1  205 75
 1  206 71
 1  207 67
 1  208 63
 1  209 59
 1  210 55
 1  211 51
 1  212 47
 1  213 43
 1  214 39
 1  215 35
 1  216 31
 1  217 27
 1  218 23
 1  219 19
 1  220 15
 1  221 11
 1  222 7
 1  223 3
 1  224 0
 1  225 0
 1  226 0
 1  227 0
 1  228 0
 1  229 0
 1  230 0
 1  231 0
 1  232 0
 1  233 0
 1  234 0
 1  235 0
 1  236 0
 1  237 0
 1  238 0
 1  239 0
 1  240 0
 1  241 0
 1  242 0
 1  243 0
 1  244 0
 1  245 0
 1  246 0
 1  247 0
 1  248 0
 1  249 0
 1  250 0
 1  251 0
 1  252 0
 1  253 0
 1  254 0
 1  255 0
 2  0 131
 2  1 135
 2  2 139
 2  3 143
 2  4 147
 2  5 151
 2  6 155
 2  7 159
 2  8 163
 2  9 167
 2  10 171
 2  11 175
 2  12 179
 2  13 183
 2  14 187
 2  15 191
 2  16 195
 2  17 199
 2  18 203
 2  19 207
 2  20 211
 2  21 215
 2  22 219
 2  23 223
 2  24 227
 2  25 231
 2  26 235
 2  27 239
 2  28 243
 2  29 247
 2  30 251
 2  31 255
 2  32 255
 2  33 255
 2  34 255
 2  35 255
 2  36 255
 2  37 255
 2  38 255
 2  39 255
 2  40 255
 2  41 255
 2  42 255
 2  43 255
 2  44 255
 2  45 255
 2  46 255
 2  47 255
 2  48 255
 2  49 255
 2  50 255
 2  51 255
 2  52 255
 2  53 255
 2  54 255
 2  55 255
 2  56 255
 2  57 255
 2  58 255
 2  59 255
 2  60 255
 2  61 255
 2  62 255
 2  63 255
 2  64 255
 2  65 255
 2  66 255
 2  67 255
 2  68 255
 2  69 255
 2  70 255
 2  71 255
 2  72 255
 2  73 255
 2  74 255
 2  75 255
 2  76 255
 2  77 255
 2  78 255
 2  79 255
 2  80 255
 2  81 255
 2  82 255
 2  83 255
 2  84 255
 2  85 255
 2  86 255
 2  87 255
 2  88 255
 2  89 255
 2  90 255
 2  91 255
 2  92 255
 2  93 255
 2  94 255
 2  95 255
 2  96 255
 2  97 251
 2  98 247
 2  99 243
 2  100 239
 2  101 235
 2  102 231
 2  103 227
 2  104 223
 2  105 219
 2  106 215
 2  107 211
 2  108 207
 2  109 203
 2  110 199
 2  111 195
 2  112 191
 2  113 187
 2  114 183
 2  115 179
 2  116 175
 2  117 171
 2  118 167
 2  119 163
 2  120 159
 2  121 155
 2  122 151
 2  123 147
 2  124 143
 2  125 139
 2  126 135
 2  127 131
 2  128 127
 2  129 123
 2  130 119
 2  131 115
 2  132 111
 2  133 107
 2  134 103
 2  135 99
 2  136 95
 2  137 91
 2  138 87
 2  139 83
 2  140 79
 2  141 75
 2  142 71
 2  143 67
 2  144 63
 2  145 59
 2  146 55
 2  147 51
 2  148 47
 2  149 43
 2  150 39
 2  151 35
 2  152 31
 2  153 27
 2  154 23
 2  155 19
 2  156 15
 2  157 11
 2  158 7
 2  159 3
 2  160 0
 2  161 0
 2  162 0
 2  163 0
 2  164 0
 2  165 0
 2  166 0
 2  167 0
 2  168 0
 2  169 0
 2  170 0
 2  171 0
 2  172 0
 2  173 0
 2  174 0
 2  175 0
 2  176 0
 2  177 0
 2  178 0
 2  179 0
 2  180 0
 2  181 0
 2  182 0
 2  183 0
 2  184 0
 2  185 0
 2  186 0
 2  187 0
 2  188 0
 2  189 0
 2  190 0
 2  191 0
 2  192 0
 2  193 0
 2  194 0
 2  195 0
 2  196 0
 2  197 0
 2  198 0
 2  199 0
 2  200 0
 2  201 0
 2  202 0
 2  203 0
 2  204 0
 2  205 0
 2  206 0
 2  207 0
 2  208 0
 2  209 0
 2  210 0
 2  211 0
 2  212 0
 2  213 0
 2  214 0
 2  215 0
 2  216 0
 2  217 0
 2  218 0
 2  219 0
 2  220 0
 2  221 0
 2  222 0
 2  223 0
 2  224 0
 2  225 0
 2  226 0
 2  227 0
 2  228 0
 2  229 0
 2  230 0
 2  231 0
 2  232 0
 2  233 0
 2  234 0
 2  235 0
 2  236 0
 2  237 0
 2  238 0
 2  239 0
 2  240 0
 2  241 0
 2  242 0
 2  243 0
 2  244 0
 2  245 0
 2  246 0
 2  247 0
 2  248 0
 2  249 0
 2  250 0
 2  251 0
 2  252 0
 2  253 0
 2  254 0
 2  255 0

 * 
 */
public static void BuildColorMap()
{
		int maplength=256; 
		double m = maplength-1;				// 255
	     double n = Math.floor(((m+1)/4)+0.5);
	     double k      = 0.;
	     for (int ii=0; ii< (int)(0.5*n); ++ii)
		{
		  k++;
		  double y    = (k+n/2)/n;
		  CMAP[0][ii] = 0;
		  CMAP[1][ii] = 0;
		  CMAP[2][ii] = (byte)(m*y)&0xff;
		}
	     k = 0.;
	     for (int ii=(int)(0.5*n); ii<(int)(1.5*n); ++ii)
		{
		  k++;
		  double x    = k/n;
		  CMAP[0][ii] = 0;
		  CMAP[1][ii] =(byte)(m*x)&0xff;
		  CMAP[2][ii] = (byte)m&0xff;
		}
	   k = 0.;
	   double k2 = n;
	   for (int ii=(int)(1.5*n); ii<(int)(2.5*n); ++ii)
	     {
	     k++;
	     double x    = k/n;
	     double x2   = k2/n;
	     CMAP[0][ii] = (byte)(m*x)&0xff;
	     CMAP[1][ii] = (byte)(m)&0xff;
	     CMAP[2][ii] = (byte)(m*x2)&0xff;
	     k2--;
	     }
	   k2 = n;
	   for (int ii=(int)(2.5*n); ii<(int)(3.5*n); ++ii)
	     {
	     double x2   = k2/n;
	     CMAP[0][ii] = (byte)(m)&0xff;
	     CMAP[1][ii] = ((byte)(m*x2))&0xff;
	     CMAP[2][ii] = (byte)(0)&0xff;
	     k2--;
	     }
	   k2 = n;
	   for (int ii=(int)(3.5*n); ii<maplength; ++ii)
	     {
	     double y2   = (k2+n/2)/n;
	     CMAP[0][ii] = (byte)(m*y2)&0xff;
	     CMAP[1][ii] = (byte)0&0xff;
	     CMAP[2][ii] = 0;
	     k2--;
	     }

}

}